name: Проверка контейнеров (CI)

on:
  push:
    branches: [ main, master ]
  pull_request:

jobs:
  setup-docker:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        container: [ 'ubuntu', 'alpine' ]
    steps:

    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker
      uses: docker/setup-qemu-action@v3
      with:
        platforms: arm64,amd64
    
    - name: Check Docker Compose
      run: |
        docker compose version

    - name: Build container
      run: |
        docker compose -f docker-compose.yml build ${{ matrix.container }}
        docker image ls

  run-containers:
    name: Тестирование ${{ matrix.container }}
    runs-on: ubuntu-latest
    needs: setup-docker
    strategy:
      matrix:
        container: [ 'ubuntu', 'alpine' ]
    steps:

    - name: Checkout code
      uses: actions/checkout@v4

    - name: Start container
      run: |
        docker compose -f docker-compose.yml up -d ${{ matrix.container }}
        sleep 15
        docker ps

        - name: Test C compilation
        run: |
          cat <<EOF > hello.c
          #include <stdio.h>
          int main(void) {
              printf("Hello from ${{ matrix.container }}!\\n");
              return 0;
          }
          EOF
  
          docker cp hello.c ${{ matrix.container }}3:/app/
  
          if [ "${{ matrix.container }}" = "alpine" ]; then
            docker exec ${{ matrix.container }}3 sh -c "apk add build-base || true"
            CC_CMD="gcc"
          else
            CC_CMD="gcc"
          fi
  
          docker exec ${{ matrix.container }}3 sh -c "cd /app && $CC_CMD hello.c -o hello && ./hello"
  
    - name: Cleanup
      if: always()
      run: |
        docker compose -f docker-compose.yml down
